name: Build and Deploy to Vultr

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      HOST: ${{ secrets.DATABASE_HOST }}
      PORT: ${{ secrets.DATABASE_PORT }}
      USERNAME: ${{ secrets.DATABASE_USERNAME }}
      PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      SECRET: ${{ secrets.JWT_SECRET }}
      EXPIRE_TIME: ${{ secrets.JWT_EXPIRE_TIME }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t pramool-backend:latest .

    - name: Save image to tarball
      run: |
        docker save pramool-backend:latest -o pramool-backend.tar

    - name: Write .env file
      run: |
        echo "DATABASE_HOST=${DATABASE_HOST}" >> .env
        echo "DATABASE_PORT=${DATABASE_PORT}" >> .env
        echo "DATABASE_USERNAME=${DATABASE_USERNAME}" >> .env
        echo "DATABASE_PASSWORD=${DATABASE_PASSWORD}" >> .env
        echo "DATABASE_NAME=${DATABASE_NAME}" >> .env
        echo "JWT_SECRET=${JWT_SECRET}" >> .env
        echo "JWT_EXPIRE_TIME=${JWT_EXPIRE_TIME}" >> .env

    - name: List files
      run: ls -la
    
    - name: Debug print VPS_HOST
      run: echo "VPS_HOST=[$VPS_HOST]"

    - name: Copy image and docker-compose to VPS
      uses: appleboy/scp-action@v1
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        source: "docker-compose.yml,pramool-backend.tar"
        target: "~/pramool"
        

    - name: Load image and run docker-compose on VPS
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USER }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          cd ~/pramool

          docker load -i pramool-backend.tar

          docker-compose down
          docker-compose up -d --remove-orphans